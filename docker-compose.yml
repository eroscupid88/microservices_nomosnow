version: '3.9'


services:



  configserver:
    image: configserver:latest
    container_name: configServer
    ports:
      - "7071:7071"
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    image: eurekaserver:latest
    container_name: eurekaServer
    ports:
      - "7070:7070"
    depends_on:
#      database:
#        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"
  gatewayserver:
    image: gatewayserver:latest
    container_name: gateway
    ports:
      - "7072:7072"
    environment:
      PROFILE: "dev"
      SERVER_PORT: "7072"
      CONFIGSERVER_URI: "http://configserver:7071"
      EUREKASERVER_URI: "http://eurekaserver:7070/eureka/"
      EUREKASERVER_PORT: "7070"
      CONFIGSERVER_PORT: "7071"
    depends_on:
      #        database:
      #          condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"
  keycloak:
    image: jboss/keycloak
    restart: always
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
  #  volumes:
  #    - ./realm-export.json:/opt/jboss/keycloak/realm-export.json
  #  command:
  #    - "-b 0.0.0.0"
  #    - "-Dkeycloak.import=/opt/jboss/keycloak/realm-export.json"
  #    - "-Dkeycloak.profile.feature.scripts=enabled"
  #    - "-Dkeycloak.profile.feature.upload_scripts=enabled"
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "keycloak"
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"
  redisserver:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - "redis"
networks:
  backend:
    driver: bridge